[gcode_macro _ECHO_STATUS]
description: Echo variables to the console.
gcode:
    {% for key, value in printer["gcode_macro _STATUS"].items() %}
        {% if value.items %}
            {action_respond_info(key ~ ": {")}
            {% for k, v in value.items() %}
                {action_respond_info("   " ~ k ~ ": " ~ v)}
            {% endfor %}
            {action_respond_info("}")}
        {% else %}
            {action_respond_info(key ~ ": " ~ value)}
        {% endif %}
    {% endfor %}

[gcode_macro _STATUS]
variable_last_status: 'none'
variable_status_stack: []
variable_command_list: {}
variable_status_list: [
    'idle', # Printer has reached it's idle timeout
    'ready', # Printer is ready to receive a job
    'filament_load', # Loading filament
    'filament_unload', # Unloading filament
    'bed_heating', # Waiting for the bed to reach target
    'chamber_heating', # Waiting for the chamber to reach target
    'homing', # Homing any axis
    'leveling_gantry', # Performing quad gantry-leveling
    'calibrating_z', # Performing z-tilt adjustment
    'meshing', # Calibrating a bed mesh
    'extruder_heating', # Waiting for the extruder to reach target
    'purging', # Printing purge line
    'printing', # Actively printing
    'pausing', # Print is paused
    'cancelling', # Print is being cancelled
    'completing', # Print completed
    'error' # Printer has encountered an error
]
gcode:
    _ECHO_STATUS


[gcode_macro UPDATE_STATUS]
gcode:
    DEBUG MSG={"=== UPDATE_STATUS ==="}
    # Parameters
    {% set new_status = params.STATUS|string %}
    {% set message = params.MSG|default(false, true) %}
    {% set action = params.ACTION|default(false, true) %}
    DEBUG MSG={"params: STATUS=" ~ new_status ~ " MSG=" ~ message ~ " ACTION=" ~ action}
    DEBUG MSG={["params: STATUS=", 2, 3]|join}

    {% set old_status = printer["gcode_macro _STATUS"].status %}
    {% set status_stack = printer["gcode_macro _STATUS"].status_stack %}
    DEBUG MSG={"state:"}
    DEBUG MSG={"   status=" ~ old_status}
    DEBUG MSG={"   status_stack=" ~ status_stack.join(', ')}

    {% if new_status in status_list %}
        {action_raise_error("STATUS parameter '{}' not valid.".format(new_status))}
    {% endif %}

    {% if old_status == "error" %}
        {% if action == "clear" %}
            {% do status_stack.clear() %}
        {% else %}
            {% if not action or action == "pop" %}
                {% set old_status = (status_stack|default(['ready'], True)).pop() %}
            {% endif %}
            {% if not action or action == "push" %}
                {% do status_stack.append(new_status) %}
            {% endif %}
        {% endif %}

        SET_GCODE_VARIABLE MACRO=_STATUS VARIABLE=status VALUE={status_stack.last()}
        DEBUG MSG={"Status updated: %s" % new_status}

        {% if message %}
            SET_DISPLAY_TEXT MSG=message
        {% endif %}

        UPDATE_LIGHTS
    {% endif %}

[gcode_macro RESTORE_GCODE_STATE]
rename_existing: BASE_RESTORE_GCODE_STATE
gcode:
    # Parameters
    {% set name = params.NAME|default("default") %}

    BASE_RESTORE_GCODE_STATE {rawparams}
    UPDATE_STATUS STATUS={name} ACTION="pop"

[gcode_macro SAVE_GCODE_STATE]
rename_existing: BASE_SAVE_GCODE_STATE
gcode:
    # Parameters
    {% set name = params.NAME|default("default") %}

    BASE_SAVE_GCODE_STATE {rawparams}
    UPDATE_STATUS STATUS={name} ACTION="push"
